{"version":3,"file":"src_components_Paging_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/Paging/index.tsx","webpack:///./src/components/Paging/styles.ts","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js"],"sourcesContent":["import {TouchableOpacity, View} from 'react-native';\nimport TextCM from '../Text';\nimport {useEffect, useState} from 'react';\nimport styles from './styles';\nimport {IconArrowGrey} from '../../assets/images';\nimport {SizeDP} from '../../constants/Size';\ntype Props = {\n  collectionSize: number;\n  pageSize: number;\n  currentPage: number;\n  onPageChange: (currentPage: number) => void;\n};\n\nconst PagingCM = ({\n  collectionSize,\n  pageSize,\n  currentPage,\n  onPageChange,\n}: Props) => {\n  console.log('collectionSize', collectionSize);\n\n  const [totalPages, setTotalPages] = useState(\n    Array.from(Array(Math.ceil(collectionSize / pageSize))).map(\n      (item, idx) => idx + 1,\n    ),\n  );\n\n  useEffect(() => {\n    setTotalPages(\n      Array.from(Array(Math.ceil(collectionSize / pageSize))).map(\n        (item, idx) => idx + 1,\n      ),\n    );\n  }, [collectionSize]);\n\n  const createPaginationArray = (): number[] => {\n    const array = [];\n    const beforePage = Math.max(1, currentPage - 1);\n    const afterPage = Math.min(totalPages.length, currentPage + 1);\n\n    for (let plength = beforePage; plength <= afterPage; plength++) {\n      if (plength > totalPages.length) {\n        continue;\n      }\n      if (plength === 0) {\n        plength = plength + 1;\n      }\n      array.push(plength);\n    }\n\n    return array;\n  };\n\n  const selectPageNumber = (pageNumber: number) => {\n    onPageChange(pageNumber);\n    createPaginationArray();\n  };\n\n  const next = () => {\n    const nextPage = currentPage + 1;\n    if (nextPage > totalPages.length) return;\n    nextPage <= totalPages.length && selectPageNumber(nextPage);\n  };\n\n  /** Set previous page number */\n  const previous = () => {\n    const previousPage = currentPage - 1;\n    if (previousPage <= 0) return;\n    previousPage >= 1 && selectPageNumber(previousPage);\n  };\n\n  return (\n    <View style={styles.ctnMain}>\n      <TouchableOpacity\n        onPress={previous}\n        style={[styles.ctnText, {transform: [{rotate: '90deg'}]}]}\n        hitSlop={SizeDP(15)}>\n        <IconArrowGrey width={SizeDP(16)} height={SizeDP(16)} />\n      </TouchableOpacity>\n      {currentPage > 2 && (\n        <>\n          <TouchableOpacity\n            hitSlop={SizeDP(15)}\n            onPress={() => selectPageNumber(1)}\n            style={[styles.ctnText, currentPage === 1 && styles.ctnSelect]}>\n            <TextCM>1</TextCM>\n          </TouchableOpacity>\n          <TextCM>...</TextCM>\n        </>\n      )}\n\n      {createPaginationArray().map(numb => (\n        <TouchableOpacity\n          key={numb}\n          hitSlop={SizeDP(15)}\n          onPress={() => selectPageNumber(numb)}\n          style={[styles.ctnText, currentPage === numb && styles.ctnSelect]}>\n          <TextCM>{numb}</TextCM>\n        </TouchableOpacity>\n      ))}\n      {currentPage < totalPages.length - 1 && (\n        <>\n          {currentPage < totalPages.length - 1 && <TextCM>...</TextCM>}\n          <TouchableOpacity\n            hitSlop={SizeDP(15)}\n            style={[\n              styles.ctnText,\n              currentPage === totalPages.length && styles.ctnSelect,\n            ]}\n            onPress={() => selectPageNumber(totalPages.length)}>\n            <TextCM>{totalPages.length}</TextCM>\n          </TouchableOpacity>\n        </>\n      )}\n      <TouchableOpacity\n        onPress={next}\n        style={[styles.ctnText, {transform: [{rotate: '-90deg'}]}]}\n        hitSlop={SizeDP(15)}>\n        <IconArrowGrey width={SizeDP(16)} height={SizeDP(16)} />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default PagingCM;\n","import {StyleSheet} from 'react-native';\nimport {SizeDP} from '../../constants/Size';\n\nexport default StyleSheet.create({\n  ctnMain: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  ctnText: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: SizeDP(4),\n    borderRadius: SizeDP(10),\n    marginHorizontal: SizeDP(5),\n    minWidth: SizeDP(30),\n  },\n\n  ctnSelect: {\n    backgroundColor: '#f2ecfd',\n    color: '#6f2ced',\n  },\n});\n","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["_reactNative","require","_Text","_interopRequireDefault","_react","_styles","_images","_Size","_jsxRuntime","exports","_ref","collectionSize","pageSize","currentPage","onPageChange","console","log","_useState","useState","Array","from","Math","ceil","map","item","idx","_useState2","_slicedToArray2","default","totalPages","setTotalPages","useEffect","createPaginationArray","array","beforePage","max","afterPage","min","length","plength","push","selectPageNumber","pageNumber","jsxs","View","style","styles","ctnMain","children","jsx","TouchableOpacity","onPress","previousPage","ctnText","transform","rotate","hitSlop","SizeDP","IconArrowGrey","width","height","Fragment","ctnSelect","numb","nextPage","StyleSheet","create","flexDirection","alignItems","justifyContent","padding","borderRadius","marginHorizontal","minWidth","backgroundColor","color","module","r","l","t","Symbol","iterator","e","n","i","u","a","f","o","call","next","Object","done","value","__esModule","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest"],"sourceRoot":""}