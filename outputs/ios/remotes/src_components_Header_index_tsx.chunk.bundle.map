{"version":3,"file":"src_components_Header_index_tsx.chunk.bundle","mappings":"oNACAA,EAAAC,EAAA,YACAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,MACAG,EAAAH,EAAA,OAOAI,EAAAJ,EAAA,OAAuDK,EAAAL,EAAA,OAkErDM,EAAAA,QAnDe,SAAHC,GAWA,IAVZC,EAAKD,EAALC,MACAC,EAAeF,EAAfE,gBAAeC,EAAAH,EACfI,aAAAA,OAAY,IAAAD,EAAG,aAAYA,EAAAE,EAAAL,EAC3BM,MAAAA,OAAK,IAAAD,EAAG,YAAWA,EACnBE,EAAYP,EAAZO,aACAC,EAAkBR,EAAlBQ,mBAAkBC,EAAAT,EAClBU,WAAAA,OAAU,IAAAD,EAAG,UAASA,EAAAE,EAAAX,EACtBY,UAAAA,OAAS,IAAAD,EAAG,SAAQA,EAAAE,EAAAb,EACpBc,SAAAA,OAAQ,IAAAD,EAAG,GAAEA,EACbE,EAAgBf,EAAhBe,iBAEMC,GAAQ,EAAAC,EAAAA,YACdC,QAAQC,IAAIH,GAEZ,IAAMI,GAAa,EAAAC,EAAAA,iBAEbC,EAAwB,YACxB,EAAAC,EAAAA,aAAYrB,GACdkB,EAAWI,SAEXtB,GAEJ,EAUA,OACE,EAAAJ,EAAA2B,KAAC/B,EAAAgC,KAAI,CAACzB,MAAO,CAACA,GAAO0B,UACnB,EAAA7B,EAAA2B,KAAC7B,EAAAgC,cAAa,CACZtB,MAAOA,EACPI,WAAYA,EACZmB,cAbmB,WAAH,OACpB,EAAA/B,EAAA2B,KAAC7B,EAAAkC,oBAAmB,CAClBC,QAAS,GACTC,QAASV,EACTW,MAAM,EAAAnC,EAAA2B,KAAC7B,EAAAsC,KAAI,CAACC,KAAM/B,EAAcgC,KAAMrB,KACtC,EASEsB,eAAgB7B,EAChBI,UAAWA,EACXE,SAAUA,EACVb,MAAO,CACLM,EACA,CACE+B,UAAW,QAMvB,C","sources":["webpack:///./src/components/Header/index.tsx"],"sourcesContent":["// Import external\nimport React from 'react';\nimport {StyleProp, TextProps, View, ViewStyle} from 'react-native';\nimport {isUndefined} from 'lodash';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n  useTheme,\n} from '@ui-kitten/components';\nimport {RenderProp} from '@ui-kitten/components/devsupport';\nimport {useNavigation} from '@react-navigation/native';\n\ntype Props = {\n  style?: StyleProp<ViewStyle>;\n  title?: RenderProp<TextProps> | React.ReactText | undefined;\n  subtitle?: RenderProp<TextProps> | React.ReactText | undefined;\n  onPressIconLeft?: () => void;\n  viewIconLeft?: string;\n  contentStyle?: StyleProp<ViewStyle>;\n  renderContentRight?: () => React.ReactElement;\n  appearance?: 'default' | 'control';\n  alignment?: 'start' | 'center';\n  fillIconBackLeft?: string;\n};\n\nconst HeaderCM = ({\n  style,\n  onPressIconLeft,\n  viewIconLeft = 'arrow-back',\n  title = 'quangnh39',\n  contentStyle,\n  renderContentRight,\n  appearance = 'default',\n  alignment = 'center',\n  subtitle = '',\n  fillIconBackLeft,\n}: Props) => {\n  const theme = useTheme();\n  console.log(theme);\n\n  const navigation = useNavigation();\n\n  const handleOnpressIconLeft = () => {\n    if (isUndefined(onPressIconLeft)) {\n      navigation.goBack();\n    } else {\n      onPressIconLeft();\n    }\n  };\n\n  const renderBackAction = () => (\n    <TopNavigationAction\n      hitSlop={15}\n      onPress={handleOnpressIconLeft}\n      icon={<Icon name={viewIconLeft} fill={fillIconBackLeft} />}\n    />\n  );\n\n  return (\n    <View style={[style]}>\n      <TopNavigation\n        title={title}\n        appearance={appearance}\n        accessoryLeft={renderBackAction}\n        accessoryRight={renderContentRight}\n        alignment={alignment}\n        subtitle={subtitle}\n        style={[\n          contentStyle,\n          {\n            marginTop: 46,\n          },\n        ]}\n      />\n    </View>\n  );\n};\n\nexport default HeaderCM;\n"],"names":["_interopRequireDefault","require","_reactNative","_lodash","_components","_native","_jsxRuntime","exports","_ref","style","onPressIconLeft","_ref$viewIconLeft","viewIconLeft","_ref$title","title","contentStyle","renderContentRight","_ref$appearance","appearance","_ref$alignment","alignment","_ref$subtitle","subtitle","fillIconBackLeft","theme","useTheme","console","log","navigation","useNavigation","handleOnpressIconLeft","isUndefined","goBack","jsx","View","children","TopNavigation","accessoryLeft","TopNavigationAction","hitSlop","onPress","icon","Icon","name","fill","accessoryRight","marginTop"],"sourceRoot":""}