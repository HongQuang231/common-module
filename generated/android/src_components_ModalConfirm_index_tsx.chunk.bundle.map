{"version":3,"file":"src_components_ModalConfirm_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/Button/index.tsx","webpack:///./src/components/Button/styles.ts","webpack:///./src/components/ModalConfirm/index.tsx","webpack:///./src/components/ModalConfirm/styles.tsx"],"sourcesContent":["// Import external\nimport React, {FC, useCallback} from 'react';\nimport {\n  ActivityIndicator,\n  StyleProp,\n  TextStyle,\n  TouchableOpacity,\n  View,\n  ViewStyle,\n} from 'react-native';\n// Import internal\nimport {debounce, isEmpty} from 'lodash';\nimport TextCM from '../Text';\nimport styles from './styles';\nimport {Color} from '../../constants';\n\ntype Props = {\n  style?: StyleProp<ViewStyle>;\n  styleLabel?: StyleProp<TextStyle>;\n  label?: string;\n  onPress: () => void;\n  debounceNumber?: number;\n  viewIconLeft?: React.ReactNode;\n  viewIconRight?: React.ReactNode;\n  disabled?: boolean;\n  loading?: boolean;\n};\n\nconst ButtonCM: FC<Props> = ({\n  style,\n  styleLabel,\n  label = 'text button',\n  onPress = () => {},\n  debounceNumber = 0,\n  disabled = false,\n  loading = false,\n  viewIconLeft,\n  viewIconRight,\n}) => {\n  const handlerPress = useCallback(debounce(onPress, debounceNumber), [\n    onPress,\n  ]);\n  return (\n    <TouchableOpacity\n      disabled={disabled || loading}\n      style={[styles.btnDefault, disabled && styles.btnDisable, style]}\n      onPress={handlerPress}>\n      <View>{!isEmpty(viewIconLeft) && viewIconLeft}</View>\n      {loading ? (\n        <ActivityIndicator size=\"small\" color={Color.White} />\n      ) : (\n        <TextCM style={[styles.txtDefault, styleLabel]}>{label}</TextCM>\n      )}\n      <View>{!isEmpty(viewIconRight) && viewIconRight}</View>\n    </TouchableOpacity>\n  );\n};\n\nexport default ButtonCM;\n","import {StyleSheet} from 'react-native';\nimport { Color, FontSize, Font } from '../../constants';\nimport { SizeDP } from '../../constants/Size';\n\nexport default StyleSheet.create({\n  btnDefault: {\n    height: SizeDP(40),\n    borderRadius: SizeDP(8),\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: SizeDP(20),\n    flexDirection: 'row',\n    backgroundColor: Color.BgPrimary,\n  },\n  btnDisable: {\n    opacity: 0.5,\n  },\n  txtDefault: {\n    fontSize: FontSize.FontSmall,\n    color: Color.White,\n    fontFamily: Font.InterMedium500,\n  },\n  txtWhite: {\n    color: Color.White,\n  },\n});\n","import React from 'react';\nimport styles from './styles';\nimport {\n  Keyboard,\n  Modal,\n  StyleProp,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {isEmpty} from 'lodash';\nimport ButtonCM from '../Button';\nimport TextCM from '../Text';\nimport { IconCancel, IconInfo, IconNotiModal } from '../../assets/images';\nimport { SizeDP } from '../../constants/Size';\n\ntype Props = {\n  onClose: () => void;\n  onConfirm?: () => void;\n  isVisible: boolean;\n  labelCancel?: string;\n  labelConfirm?: string;\n  labelClose?: string;\n  title: string;\n  content?: string;\n  renderContent?: () => React.ReactNode;\n  type?: 'delete' | 'success' | 'error' | 'info' | 'cancel' | 'noti';\n  styleBtnLeft?: StyleProp<ViewStyle>;\n  styleBtnRight?: StyleProp<ViewStyle>;\n};\n\nconst ModalConfirmCM = ({\n  onClose,\n  onConfirm,\n  isVisible,\n  title,\n  content,\n  labelCancel,\n  labelConfirm,\n  renderContent,\n  type = 'delete',\n  styleBtnLeft,\n  styleBtnRight,\n}: Props) => {\n  const getIcon = () => {\n    switch (type) {\n      case 'cancel':\n        return <IconCancel width={SizeDP(56)} height={SizeDP(56)} />;\n      case 'delete':\n        return <IconInfo width={SizeDP(56)} height={SizeDP(56)} />;\n      case 'success':\n        return <IconInfo width={SizeDP(56)} height={SizeDP(56)} />;\n      case 'error':\n        return <IconInfo width={SizeDP(56)} height={SizeDP(56)} />;\n      case 'info':\n        return <IconInfo width={SizeDP(56)} height={SizeDP(56)} />;\n      case 'noti':\n        return <IconNotiModal width={SizeDP(56)} height={SizeDP(56)} />;\n    }\n  };\n\n  const onPressConfirm = () => {\n    onConfirm?.();\n  };\n\n  const renderFooter = () => {\n    return (\n      <View style={styles.viewBtn}>\n        <ButtonCM\n          label={labelCancel}\n          onPress={onClose}\n          style={[styles.btn, styleBtnLeft, styles.btnLeft]}\n          styleLabel={styles.labelStyleLeft}\n        />\n        <ButtonCM\n          label={labelConfirm}\n          onPress={onPressConfirm}\n          style={[styles.btn, styleBtnRight]}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <Modal visible={isVisible} transparent>\n      <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n        <View style={styles.ctnContainer}>\n          <View style={styles.container}>\n            <View style={styles.body}>\n              <View style={styles.viewIconDelete}>{getIcon()}</View>\n              {!isEmpty(title) && (\n                <TextCM style={styles.txtTitle}>{title}</TextCM>\n              )}\n              {!isEmpty(content) && (\n                <TextCM style={styles.txtContent}>{content}</TextCM>\n              )}\n              {renderContent?.()}\n            </View>\n            {renderFooter()}\n          </View>\n        </View>\n      </TouchableWithoutFeedback>\n    </Modal>\n  );\n};\n\nexport default ModalConfirmCM;\n","import {StyleSheet} from 'react-native';\nimport {Color, FontSize, Font} from '../../constants';\nimport {SizeDP} from '../../constants/Size';\n\nexport default StyleSheet.create({\n  ctnContainer: {\n    flex: 1,\n    backgroundColor: '#000810B2',\n    justifyContent: 'center',\n  },\n  container: {\n    backgroundColor: Color.White,\n    margin: SizeDP(20),\n    borderRadius: SizeDP(8),\n    padding: SizeDP(16),\n    paddingVertical: SizeDP(24),\n  },\n  body: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    gap: SizeDP(8),\n  },\n  viewBtn: {\n    marginTop: SizeDP(16),\n    flexDirection: 'row',\n    gap: SizeDP(16),\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  btn: {\n    flex: 1,\n  },\n  btnLeft: {\n    backgroundColor: Color.BtnDisable,\n  },\n  labelStyleLeft: {\n    color: Color.Text,\n  },\n  txtTitle: {\n    fontSize: FontSize.FontBase,\n    fontFamily: Font.InterSemiBold600,\n    color: Color.Text,\n    textAlign: 'center',\n  },\n  txtContent: {\n    textAlign: 'center',\n    fontFamily: Font.InterRegular400,\n    color: Color.Text07,\n  },\n  viewIconDelete: {\n    marginVertical: SizeDP(10),\n  },\n});\n"],"names":["_react","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","require","_reactNative","_lodash","_Text","_interopRequireDefault","_styles","_constants","_jsxRuntime","WeakMap","exports","_ref","style","styleLabel","_ref$label","label","_ref$onPress","onPress","_ref$debounceNumber","debounceNumber","_ref$disabled","disabled","_ref$loading","loading","viewIconLeft","viewIconRight","handlerPress","useCallback","debounce","jsxs","TouchableOpacity","styles","btnDefault","btnDisable","children","jsx","View","isEmpty","ActivityIndicator","size","color","Color","White","txtDefault","_Size","StyleSheet","create","height","SizeDP","borderRadius","alignItems","justifyContent","paddingHorizontal","flexDirection","backgroundColor","BgPrimary","opacity","fontSize","FontSize","FontSmall","fontFamily","Font","InterMedium500","txtWhite","_Button","_images","onClose","onConfirm","isVisible","title","content","labelCancel","labelConfirm","renderContent","_ref$type","type","styleBtnLeft","styleBtnRight","onPressConfirm","Modal","visible","transparent","TouchableWithoutFeedback","Keyboard","dismiss","ctnContainer","container","body","viewIconDelete","IconCancel","width","IconInfo","IconNotiModal","getIcon","txtTitle","txtContent","viewBtn","btn","btnLeft","labelStyleLeft","flex","margin","padding","paddingVertical","gap","marginTop","BtnDisable","Text","FontBase","InterSemiBold600","textAlign","InterRegular400","Text07","marginVertical"],"sourceRoot":""}