{"version":3,"file":"src_components_Header_index_tsx.chunk.bundle","mappings":"oNACAA,EAAAC,EAAA,YACAC,EAAAD,EAAA,OAUAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,MACAI,EAAAJ,EAAA,MACAK,EAAAN,EAAAC,EAAA,QACAM,EAAAP,EAAAC,EAAA,QACAO,EAAAP,EAAA,OACAQ,EAAAR,EAAA,MAA4CS,EAAAT,EAAA,OAiD1CU,EAAAA,QAtCe,SAAHC,GAOA,IANZC,EAAKD,EAALC,MACAC,EAAeF,EAAfE,gBACAC,EAAYH,EAAZG,aAAYC,EAAAJ,EACZK,MAAAA,OAAK,IAAAD,EAAG,YAAWA,EACnBE,EAAUN,EAAVM,WACAC,EAAkBP,EAAlBO,mBAEMC,GAAa,EAAAC,EAAAA,iBASnB,OACE,EAAAX,EAAAY,KAACpB,EAAAqB,KAAI,CAACV,MAAO,CAACW,EAAAA,QAAOC,QAASZ,GAAOa,UACnC,EAAAhB,EAAAiB,MAACtB,EAAAuB,aAAY,CAACC,MAAO,CAAC,OAAQhB,MAAOW,EAAAA,QAAOM,UAAUJ,SAAA,EACpD,EAAAhB,EAAAiB,MAACzB,EAAAqB,KAAI,CAACV,MAAOW,EAAAA,QAAOO,QAAQL,SAAA,EAC1B,EAAAhB,EAAAY,KAACpB,EAAA8B,iBAAgB,CACfC,SAAS,EAAAC,EAAAA,QAAO,IAChBC,QAboB,YACxB,EAAAC,EAAAA,aAAYtB,GACdM,EAAWiB,SAEXvB,GAEJ,EAOyCY,UAC9B,EAAAY,EAAAA,SAAQvB,IACP,EAAAL,EAAAY,KAACd,EAAA+B,mBAAkB,CAACC,OAAO,EAAAN,EAAAA,QAAO,IAAKO,QAAQ,EAAAP,EAAAA,QAAO,MAEtDnB,MAGF,EAAAuB,EAAAA,SAAQrB,KACR,EAAAP,EAAAY,KAACf,EAAAmC,QAAM,CAAC7B,MAAO,CAACW,EAAAA,QAAOmB,SAAUzB,GAAYQ,SAAET,SAGjD,EAAAqB,EAAAA,SAAQnB,IAAuBA,MAIzC,C,0FCnEA,IAAAjB,EAAAD,EAAA,OACA2C,EAAA3C,EAAA,OACAQ,EAAAR,EAAA,MAEMuB,EAASqB,EAAAA,WAAWC,OAAO,CAC/BrB,QAAS,CACPsB,gBAAiBC,EAAAA,MAAMC,WAEzBnB,UAAW,CACToB,mBAAmB,EAAAhB,EAAAA,QAAO,IAC1BiB,cAAe,MACfC,WAAY,SACZC,eAAgB,gBAChBC,iBAAiB,EAAApB,EAAAA,QAAO,GACxBqB,cAAc,EAAArB,EAAAA,QAAO,IAEvBH,QAAS,CACPoB,cAAe,MACfC,WAAY,SACZC,eAAgB,UAElBV,SAAU,CACRa,aAAa,EAAAtB,EAAAA,QAAO,IACpBuB,MAAOT,EAAAA,MAAMU,MACbC,WAAYC,EAAAA,KAAKC,aACjBC,SAAUC,EAAAA,SAASC,SACnBC,UAAW,YAEZtD,EAAAA,QACYa,C","sources":["webpack:///./src/components/Header/index.tsx","webpack:///./src/components/Header/styles.ts"],"sourcesContent":["// Import external\nimport React, {FC} from 'react';\nimport {\n  StyleProp,\n  TextStyle,\n  TouchableOpacity,\n  View,\n  ViewStyle,\n} from 'react-native';\n\n// Import internal\n\nimport {useNavigation} from '@react-navigation/native';\nimport {isEmpty, isUndefined} from 'lodash';\nimport {SafeAreaView} from 'react-native-safe-area-context';\nimport styles from './styles';\nimport TextCM from '../Text';\nimport {IconWhiteLeftArrow} from '../../assets/images';\nimport {SizeDP} from '../../constants/Size';\n\ntype Props = {\n  style?: StyleProp<ViewStyle>;\n  title?: string;\n  onPressIconLeft?: () => void;\n  viewIconLeft?: React.ReactNode;\n  titleStyle?: StyleProp<TextStyle>;\n  renderContentRight?: React.ReactNode;\n};\n\nconst HeaderCM = ({\n  style,\n  onPressIconLeft,\n  viewIconLeft,\n  title = 'quangnh39',\n  titleStyle,\n  renderContentRight,\n}: Props) => {\n  const navigation = useNavigation();\n\n  const handleOnpressIconLeft = () => {\n    if (isUndefined(onPressIconLeft)) {\n      navigation.goBack();\n    } else {\n      onPressIconLeft();\n    }\n  };\n  return (\n    <View style={[styles.ctnMain, style]}>\n      <SafeAreaView edges={['top']} style={styles.ctnHeader}>\n        <View style={styles.ctnLeft}>\n          <TouchableOpacity\n            hitSlop={SizeDP(15)}\n            onPress={handleOnpressIconLeft}>\n            {isEmpty(viewIconLeft) ? (\n              <IconWhiteLeftArrow width={SizeDP(24)} height={SizeDP(24)} />\n            ) : (\n              viewIconLeft\n            )}\n          </TouchableOpacity>\n          {!isEmpty(title) && (\n            <TextCM style={[styles.txtTitle, titleStyle]}>{title}</TextCM>\n          )}\n        </View>\n        {!isEmpty(renderContentRight) && renderContentRight}\n      </SafeAreaView>\n    </View>\n  );\n};\n\nexport default HeaderCM;\n","import {StyleSheet} from 'react-native';\nimport {Color, Font, FontSize} from '../../constants';\nimport {SizeDP} from '../../constants/Size';\n\nconst styles = StyleSheet.create({\n  ctnMain: {\n    backgroundColor: Color.BgPrimary,\n  },\n  ctnHeader: {\n    paddingHorizontal: SizeDP(18),\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: SizeDP(8),\n    marginBottom: SizeDP(2),\n  },\n  ctnLeft: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  txtTitle: {\n    marginStart: SizeDP(18),\n    color: Color.White,\n    fontFamily: Font.InterBold700,\n    fontSize: FontSize.FontBase,\n    textAlign: 'center',\n  },\n});\nexport default styles;\n"],"names":["_interopRequireDefault","require","_reactNative","_native","_lodash","_reactNativeSafeAreaContext","_styles","_Text","_images","_Size","_jsxRuntime","exports","_ref","style","onPressIconLeft","viewIconLeft","_ref$title","title","titleStyle","renderContentRight","navigation","useNavigation","jsx","View","styles","ctnMain","children","jsxs","SafeAreaView","edges","ctnHeader","ctnLeft","TouchableOpacity","hitSlop","SizeDP","onPress","isUndefined","goBack","isEmpty","IconWhiteLeftArrow","width","height","default","txtTitle","_constants","StyleSheet","create","backgroundColor","Color","BgPrimary","paddingHorizontal","flexDirection","alignItems","justifyContent","paddingVertical","marginBottom","marginStart","color","White","fontFamily","Font","InterBold700","fontSize","FontSize","FontBase","textAlign"],"sourceRoot":""}