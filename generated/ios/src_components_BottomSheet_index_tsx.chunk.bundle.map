{"version":3,"file":"src_components_BottomSheet_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/BottomSheet/index.tsx","webpack:///./src/components/BottomSheet/styles.ts"],"sourcesContent":["import {isEmpty} from 'lodash';\nimport React from 'react';\nimport {\n  KeyboardAvoidingView,\n  Modal,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport {useSafeAreaInsets} from 'react-native-safe-area-context';\nimport styles from './styles';\nimport TextCM from '../Text';\nimport {IconLeftArrow} from '../../assets/images';\nimport {SizeDP} from '../../constants/Size';\n\ntype Props = {\n  onClose: () => void;\n  isVisible: boolean;\n  iconClose?: React.ReactElement;\n  renderContent?: React.ReactElement;\n  title: string;\n  labelRight?: string;\n  onPresLabelRight?: () => void;\n  withKeyboardAvoidingView?: boolean;\n};\n\nconst BottomSheetCM = ({\n  onClose,\n  isVisible,\n  iconClose,\n  renderContent,\n  title,\n  labelRight,\n  onPresLabelRight,\n  withKeyboardAvoidingView,\n}: Props) => {\n  const insets = useSafeAreaInsets();\n\n  return (\n    <Modal animationType=\"fade\" transparent visible={isVisible}>\n      {!withKeyboardAvoidingView ? (\n        <View style={styles.ctnContainer}>\n          <View style={styles.ctnTop} onTouchEnd={onClose} />\n          <View style={[styles.ctnContent, {paddingBottom: insets.bottom}]}>\n            <View style={styles.viewHeader}>\n              <TouchableOpacity onPress={onClose}>\n                {isEmpty(iconClose) ? (\n                  <IconLeftArrow width={SizeDP(16)} height={SizeDP(16)} />\n                ) : (\n                  iconClose\n                )}\n              </TouchableOpacity>\n              <TextCM style={styles.txtTitle}>{title}</TextCM>\n              {isEmpty(labelRight) ? (\n                <View />\n              ) : (\n                <TouchableOpacity onPress={onPresLabelRight}>\n                  <TextCM style={styles.txtRight}>{labelRight}</TextCM>\n                </TouchableOpacity>\n              )}\n            </View>\n            <View style={styles.viewBody}>{renderContent}</View>\n          </View>\n        </View>\n      ) : (\n        <KeyboardAvoidingView\n          style={{flex: 1}}\n          behavior={'padding'}\n          keyboardVerticalOffset={-insets.bottom}>\n          <View style={styles.ctnContainer}>\n            <View style={styles.ctnTop} onTouchEnd={onClose} />\n            <View style={[styles.ctnContent, {paddingBottom: insets.bottom}]}>\n              <View style={styles.viewHeader}>\n                <TouchableOpacity onPress={onClose}>\n                  {isEmpty(iconClose) ? (\n                    <IconLeftArrow width={SizeDP(16)} height={SizeDP(16)} />\n                  ) : (\n                    iconClose\n                  )}\n                </TouchableOpacity>\n                <TextCM style={styles.txtTitle}>{title}</TextCM>\n                {isEmpty(labelRight) ? (\n                  <View />\n                ) : (\n                  <TouchableOpacity onPress={onPresLabelRight}>\n                    <TextCM style={styles.txtRight}>{labelRight}</TextCM>\n                  </TouchableOpacity>\n                )}\n              </View>\n              <View style={styles.viewBody}>{renderContent}</View>\n            </View>\n          </View>\n        </KeyboardAvoidingView>\n      )}\n    </Modal>\n  );\n};\n\nexport default BottomSheetCM;\n","import {StyleSheet} from 'react-native';\nimport {Color, Font} from '../../constants';\nimport FontSize, {SizeDP} from '../../constants/Size';\n\nexport default StyleSheet.create({\n  ctnContainer: {\n    flex: 1,\n    backgroundColor: Color.borderColor,\n  },\n  ctnTop: {\n    flex: 1,\n  },\n  ctnContent: {\n    backgroundColor: Color.White,\n    borderTopStartRadius: SizeDP(16),\n    borderTopEndRadius: SizeDP(16),\n  },\n  txtTitle: {\n    // textAlign: 'center',\n    color: Color.colorText,\n    fontFamily: Font.InterSemiBold600,\n    fontSize: FontSize.FontBase,\n  },\n  txtRight: {\n    textAlign: 'right',\n    color: Color.add,\n    fontFamily: Font.InterMedium500,\n    fontSize: FontSize.FontSmall,\n  },\n  viewHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: SizeDP(18),\n    borderBottomColor: Color.Background,\n    borderBottomWidth: 0.5,\n  },\n  viewBody: {\n    padding: SizeDP(16),\n    gap: SizeDP(16),\n  },\n});\n"],"names":["_lodash","require","_reactNative","_interopRequireDefault","_reactNativeSafeAreaContext","_styles","_Text","_images","_Size","_jsxRuntime","exports","_ref","onClose","isVisible","iconClose","renderContent","title","labelRight","onPresLabelRight","withKeyboardAvoidingView","insets","useSafeAreaInsets","jsx","Modal","animationType","transparent","visible","children","KeyboardAvoidingView","style","flex","behavior","keyboardVerticalOffset","bottom","jsxs","View","styles","ctnContainer","ctnTop","onTouchEnd","ctnContent","paddingBottom","viewHeader","TouchableOpacity","onPress","isEmpty","IconLeftArrow","width","SizeDP","height","default","txtTitle","txtRight","viewBody","_constants","e","r","__esModule","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","WeakMap","StyleSheet","create","backgroundColor","Color","borderColor","White","borderTopStartRadius","borderTopEndRadius","color","colorText","fontFamily","Font","InterSemiBold600","fontSize","FontSize","FontBase","textAlign","add","InterMedium500","FontSmall","flexDirection","justifyContent","alignItems","padding","borderBottomColor","Background","borderBottomWidth","gap"],"sourceRoot":""}