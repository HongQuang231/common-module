{"version":3,"file":"src_components_DropDownList_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/DropDownList/index.tsx","webpack:///./src/components/DropDownList/styles.ts"],"sourcesContent":["import {TouchableOpacity, View} from 'react-native';\nimport {Dropdown, MultiSelect} from 'react-native-element-dropdown';\nimport {FC, useState} from 'react';\nimport styles from './styles';\nimport TextCM from '../Text';\nimport { IconClear } from '../../assets/images';\nimport { Color } from '../../constants';\nimport { SizeDP } from '../../constants/Size';\n\nexport interface IDropDown {\n  label: string;\n  value: any;\n}\n\ntype Props = {\n  placeholder?: string;\n  dropdownPosition?: 'auto' | 'top' | 'bottom';\n  maxHeight?: number;\n  onSelect?: (item: IDropDown) => void;\n  onSelectMui?: (item: IDropDown[]) => void;\n  valueSelect?: IDropDown | undefined;\n  valueMuiSelect?: IDropDown[];\n  listData: IDropDown[];\n  multiple?: boolean;\n};\n\nconst DropdownListCM: FC<Props> = ({\n  placeholder,\n  dropdownPosition = 'auto',\n  maxHeight = 340,\n  onSelect,\n  onSelectMui,\n  valueSelect,\n  listData,\n  valueMuiSelect,\n  multiple = false,\n}) => {\n  const [isFocus, setIsFocus] = useState(false);\n\n  return (\n    <View style={styles.container}>\n      {!multiple ? (\n        <Dropdown\n          style={[styles.dropdown, isFocus && {borderColor: Color.borderColor}]}\n          placeholderStyle={styles.placeholderStyle}\n          selectedTextStyle={styles.selectedTextStyle}\n          inputSearchStyle={styles.inputSearchStyle}\n          iconStyle={styles.iconStyle}\n          itemTextStyle={styles.itemTextStyle}\n          containerStyle={styles.itemContainerStyle}\n          data={listData}\n          dropdownPosition={dropdownPosition}\n          maxHeight={maxHeight}\n          labelField=\"label\"\n          valueField=\"value\"\n          placeholder={!isFocus ? placeholder : ''}\n          value={valueSelect?.value}\n          onFocus={() => setIsFocus(true)}\n          onBlur={() => setIsFocus(false)}\n          onChange={item => {\n            onSelect?.(item);\n            setIsFocus(false);\n          }}\n        />\n      ) : (\n        <MultiSelect\n          style={[styles.dropdown, isFocus && {borderColor: Color.borderColor}]}\n          placeholderStyle={styles.placeholderStyle}\n          selectedTextStyle={styles.selectedTextStyle}\n          inputSearchStyle={styles.inputSearchStyle}\n          iconStyle={styles.iconStyle}\n          itemTextStyle={styles.itemTextStyle}\n          containerStyle={styles.itemContainerStyle}\n          data={listData}\n          dropdownPosition={dropdownPosition}\n          maxHeight={maxHeight}\n          labelField=\"label\"\n          valueField=\"value\"\n          placeholder={!isFocus ? placeholder : ''}\n          value={valueMuiSelect}\n          onFocus={() => setIsFocus(true)}\n          onBlur={() => setIsFocus(false)}\n          onChange={item => {\n            onSelectMui?.(item);\n            setIsFocus(false);\n          }}\n          renderSelectedItem={(item, unSelect) => (\n            <TouchableOpacity\n              style={styles.selectedStyle}\n              onPress={() => unSelect && unSelect(item)}>\n              <TextCM style={styles.textSelectedStyle}>{item.label}</TextCM>\n              <IconClear width={SizeDP(12)} height={SizeDP(12)} />\n            </TouchableOpacity>\n          )}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default DropdownListCM;\n","import {StyleSheet} from 'react-native';\nimport {Color, FontSize, Font} from '../../constants';\nimport {SizeDP} from '../../constants/Size';\n\nexport default StyleSheet.create({\n  container: {\n    backgroundColor: Color.White,\n    paddingVertical: SizeDP(10),\n  },\n  dropdown: {\n    height: SizeDP(48),\n    borderColor: Color.TxtCheckbox,\n    borderWidth: SizeDP(1),\n    borderRadius: SizeDP(8),\n    paddingHorizontal: SizeDP(8),\n  },\n  placeholderStyle: {\n    fontSize: FontSize.FontSmall,\n    color: Color.Text055,\n    fontFamily: Font.InterRegular400,\n  },\n  selectedTextStyle: {\n    fontSize: FontSize.FontSmall,\n    color: Color.Text,\n    fontFamily: Font.InterRegular400,\n  },\n  itemTextStyle: {\n    fontSize: FontSize.FontBase,\n    color: Color.Text07,\n    fontFamily: Font.InterRegular400,\n  },\n  itemContainerStyle: {\n    borderRadius: SizeDP(8),\n    overflow: 'hidden',\n    borderWidth: SizeDP(1),\n    borderColor: Color.colorBorder,\n  },\n  iconStyle: {},\n  inputSearchStyle: {},\n\n  selectedStyle: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: SizeDP(8),\n    backgroundColor: 'white',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2,\n    paddingHorizontal: SizeDP(12),\n    paddingVertical: SizeDP(8),\n    columnGap: SizeDP(16),\n    marginTop: SizeDP(8),\n    marginRight: SizeDP(8),\n  },\n  textSelectedStyle: {\n    // marginRight: SizeDP(5),\n  },\n});\n"],"names":["_reactNative","require","_reactNativeElementDropdown","_react","_styles","_interopRequireDefault","_Text","_images","_constants","_Size","_jsxRuntime","exports","_ref","placeholder","_ref$dropdownPosition","dropdownPosition","_ref$maxHeight","maxHeight","onSelect","onSelectMui","valueSelect","listData","valueMuiSelect","_ref$multiple","multiple","_useState","useState","_useState2","_slicedToArray2","default","isFocus","setIsFocus","jsx","View","style","styles","container","children","MultiSelect","dropdown","borderColor","Color","placeholderStyle","selectedTextStyle","inputSearchStyle","iconStyle","itemTextStyle","containerStyle","itemContainerStyle","data","labelField","valueField","value","onFocus","onBlur","onChange","item","renderSelectedItem","unSelect","jsxs","TouchableOpacity","selectedStyle","onPress","textSelectedStyle","label","IconClear","width","SizeDP","height","Dropdown","StyleSheet","create","backgroundColor","White","paddingVertical","TxtCheckbox","borderWidth","borderRadius","paddingHorizontal","fontSize","FontSize","FontSmall","color","Text055","fontFamily","Font","InterRegular400","Text","FontBase","Text07","overflow","colorBorder","flexDirection","justifyContent","alignItems","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","columnGap","marginTop","marginRight"],"sourceRoot":""}